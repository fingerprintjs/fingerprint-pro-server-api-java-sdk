/*
 * Server API
 * # Overview Fingerprint Server API allows you to get, search, and update Events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device. 
 *
 * The version of the OpenAPI document: 4
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingerprint.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fingerprint.model.BotResult;
import com.fingerprint.model.BrowserDetails;
import com.fingerprint.model.IPBlockList;
import com.fingerprint.model.IPInfo;
import com.fingerprint.model.Identification;
import com.fingerprint.model.Proximity;
import com.fingerprint.model.ProxyConfidence;
import com.fingerprint.model.ProxyDetails;
import com.fingerprint.model.SDK;
import com.fingerprint.model.SupplementaryIDHighRecall;
import com.fingerprint.model.TamperingDetails;
import com.fingerprint.model.Velocity;
import com.fingerprint.model.VpnConfidence;
import com.fingerprint.model.VpnMethods;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fingerprint.sdk.JSON;


/**
 * Contains results from Fingerprint Identification and all active Smart Signals.
 */
@JsonPropertyOrder({
  Event.JSON_PROPERTY_EVENT_ID,
  Event.JSON_PROPERTY_TIMESTAMP,
  Event.JSON_PROPERTY_LINKED_ID,
  Event.JSON_PROPERTY_ENVIRONMENT_ID,
  Event.JSON_PROPERTY_SUSPECT,
  Event.JSON_PROPERTY_SDK,
  Event.JSON_PROPERTY_REPLAYED,
  Event.JSON_PROPERTY_IDENTIFICATION,
  Event.JSON_PROPERTY_SUPPLEMENTARY_ID_HIGH_RECALL,
  Event.JSON_PROPERTY_TAGS,
  Event.JSON_PROPERTY_URL,
  Event.JSON_PROPERTY_BUNDLE_ID,
  Event.JSON_PROPERTY_PACKAGE_NAME,
  Event.JSON_PROPERTY_IP_ADDRESS,
  Event.JSON_PROPERTY_USER_AGENT,
  Event.JSON_PROPERTY_BROWSER_DETAILS,
  Event.JSON_PROPERTY_PROXIMITY,
  Event.JSON_PROPERTY_BOT,
  Event.JSON_PROPERTY_BOT_TYPE,
  Event.JSON_PROPERTY_CLONED_APP,
  Event.JSON_PROPERTY_DEVELOPER_TOOLS,
  Event.JSON_PROPERTY_EMULATOR,
  Event.JSON_PROPERTY_FACTORY_RESET_TIMESTAMP,
  Event.JSON_PROPERTY_FRIDA,
  Event.JSON_PROPERTY_IP_BLOCKLIST,
  Event.JSON_PROPERTY_IP_INFO,
  Event.JSON_PROPERTY_PROXY,
  Event.JSON_PROPERTY_PROXY_CONFIDENCE,
  Event.JSON_PROPERTY_PROXY_DETAILS,
  Event.JSON_PROPERTY_INCOGNITO,
  Event.JSON_PROPERTY_JAILBROKEN,
  Event.JSON_PROPERTY_LOCATION_SPOOFING,
  Event.JSON_PROPERTY_MITM_ATTACK,
  Event.JSON_PROPERTY_PRIVACY_SETTINGS,
  Event.JSON_PROPERTY_ROOT_APPS,
  Event.JSON_PROPERTY_SUSPECT_SCORE,
  Event.JSON_PROPERTY_TAMPERING,
  Event.JSON_PROPERTY_TAMPERING_DETAILS,
  Event.JSON_PROPERTY_VELOCITY,
  Event.JSON_PROPERTY_VIRTUAL_MACHINE,
  Event.JSON_PROPERTY_VPN,
  Event.JSON_PROPERTY_VPN_CONFIDENCE,
  Event.JSON_PROPERTY_VPN_ORIGIN_TIMEZONE,
  Event.JSON_PROPERTY_VPN_ORIGIN_COUNTRY,
  Event.JSON_PROPERTY_VPN_METHODS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class Event {
  public static final String JSON_PROPERTY_EVENT_ID = "event_id";
  @jakarta.annotation.Nullable
  private String eventId;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  @jakarta.annotation.Nullable
  private Long timestamp;

  public static final String JSON_PROPERTY_LINKED_ID = "linked_id";
  @jakarta.annotation.Nullable
  private String linkedId;

  public static final String JSON_PROPERTY_ENVIRONMENT_ID = "environment_id";
  @jakarta.annotation.Nullable
  private String environmentId;

  public static final String JSON_PROPERTY_SUSPECT = "suspect";
  @jakarta.annotation.Nullable
  private Boolean suspect;

  public static final String JSON_PROPERTY_SDK = "sdk";
  @jakarta.annotation.Nullable
  private SDK sdk;

  public static final String JSON_PROPERTY_REPLAYED = "replayed";
  @jakarta.annotation.Nullable
  private Boolean replayed;

  public static final String JSON_PROPERTY_IDENTIFICATION = "identification";
  @jakarta.annotation.Nullable
  private Identification identification;

  public static final String JSON_PROPERTY_SUPPLEMENTARY_ID_HIGH_RECALL = "supplementary_id_high_recall";
  @jakarta.annotation.Nullable
  private SupplementaryIDHighRecall supplementaryIdHighRecall;

  public static final String JSON_PROPERTY_TAGS = "tags";
  @jakarta.annotation.Nullable
  private Object tags;

  public static final String JSON_PROPERTY_URL = "url";
  @jakarta.annotation.Nullable
  private String url;

  public static final String JSON_PROPERTY_BUNDLE_ID = "bundle_id";
  @jakarta.annotation.Nullable
  private String bundleId;

  public static final String JSON_PROPERTY_PACKAGE_NAME = "package_name";
  @jakarta.annotation.Nullable
  private String packageName;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ip_address";
  @jakarta.annotation.Nullable
  private String ipAddress;

  public static final String JSON_PROPERTY_USER_AGENT = "user_agent";
  @jakarta.annotation.Nullable
  private String userAgent;

  public static final String JSON_PROPERTY_BROWSER_DETAILS = "browser_details";
  @jakarta.annotation.Nullable
  private BrowserDetails browserDetails;

  public static final String JSON_PROPERTY_PROXIMITY = "proximity";
  @jakarta.annotation.Nullable
  private Proximity proximity;

  public static final String JSON_PROPERTY_BOT = "bot";
  @jakarta.annotation.Nullable
  private BotResult bot;

  public static final String JSON_PROPERTY_BOT_TYPE = "bot_type";
  @jakarta.annotation.Nullable
  private String botType;

  public static final String JSON_PROPERTY_CLONED_APP = "cloned_app";
  @jakarta.annotation.Nullable
  private Boolean clonedApp;

  public static final String JSON_PROPERTY_DEVELOPER_TOOLS = "developer_tools";
  @jakarta.annotation.Nullable
  private Boolean developerTools;

  public static final String JSON_PROPERTY_EMULATOR = "emulator";
  @jakarta.annotation.Nullable
  private Boolean emulator;

  public static final String JSON_PROPERTY_FACTORY_RESET_TIMESTAMP = "factory_reset_timestamp";
  @jakarta.annotation.Nullable
  private Long factoryResetTimestamp;

  public static final String JSON_PROPERTY_FRIDA = "frida";
  @jakarta.annotation.Nullable
  private Boolean frida;

  public static final String JSON_PROPERTY_IP_BLOCKLIST = "ip_blocklist";
  @jakarta.annotation.Nullable
  private IPBlockList ipBlocklist;

  public static final String JSON_PROPERTY_IP_INFO = "ip_info";
  @jakarta.annotation.Nullable
  private IPInfo ipInfo;

  public static final String JSON_PROPERTY_PROXY = "proxy";
  @jakarta.annotation.Nullable
  private Boolean proxy;

  public static final String JSON_PROPERTY_PROXY_CONFIDENCE = "proxy_confidence";
  @jakarta.annotation.Nullable
  private ProxyConfidence proxyConfidence;

  public static final String JSON_PROPERTY_PROXY_DETAILS = "proxy_details";
  @jakarta.annotation.Nullable
  private ProxyDetails proxyDetails;

  public static final String JSON_PROPERTY_INCOGNITO = "incognito";
  @jakarta.annotation.Nullable
  private Boolean incognito;

  public static final String JSON_PROPERTY_JAILBROKEN = "jailbroken";
  @jakarta.annotation.Nullable
  private Boolean jailbroken;

  public static final String JSON_PROPERTY_LOCATION_SPOOFING = "location_spoofing";
  @jakarta.annotation.Nullable
  private Boolean locationSpoofing;

  public static final String JSON_PROPERTY_MITM_ATTACK = "mitm_attack";
  @jakarta.annotation.Nullable
  private Boolean mitmAttack;

  public static final String JSON_PROPERTY_PRIVACY_SETTINGS = "privacy_settings";
  @jakarta.annotation.Nullable
  private Boolean privacySettings;

  public static final String JSON_PROPERTY_ROOT_APPS = "root_apps";
  @jakarta.annotation.Nullable
  private Boolean rootApps;

  public static final String JSON_PROPERTY_SUSPECT_SCORE = "suspect_score";
  @jakarta.annotation.Nullable
  private Integer suspectScore;

  public static final String JSON_PROPERTY_TAMPERING = "tampering";
  @jakarta.annotation.Nullable
  private Boolean tampering;

  public static final String JSON_PROPERTY_TAMPERING_DETAILS = "tampering_details";
  @jakarta.annotation.Nullable
  private TamperingDetails tamperingDetails;

  public static final String JSON_PROPERTY_VELOCITY = "velocity";
  @jakarta.annotation.Nullable
  private Velocity velocity;

  public static final String JSON_PROPERTY_VIRTUAL_MACHINE = "virtual_machine";
  @jakarta.annotation.Nullable
  private Boolean virtualMachine;

  public static final String JSON_PROPERTY_VPN = "vpn";
  @jakarta.annotation.Nullable
  private Boolean vpn;

  public static final String JSON_PROPERTY_VPN_CONFIDENCE = "vpn_confidence";
  @jakarta.annotation.Nullable
  private VpnConfidence vpnConfidence;

  public static final String JSON_PROPERTY_VPN_ORIGIN_TIMEZONE = "vpn_origin_timezone";
  @jakarta.annotation.Nullable
  private String vpnOriginTimezone;

  public static final String JSON_PROPERTY_VPN_ORIGIN_COUNTRY = "vpn_origin_country";
  @jakarta.annotation.Nullable
  private String vpnOriginCountry;

  public static final String JSON_PROPERTY_VPN_METHODS = "vpn_methods";
  @jakarta.annotation.Nullable
  private VpnMethods vpnMethods;

  public Event() { 
  }

  public Event eventId(@jakarta.annotation.Nullable String eventId) {
    this.eventId = eventId;
    return this;
  }

  /**
   * Unique identifier of the user&#39;s request. The first portion of the event_id is a unix epoch milliseconds timestamp For example: &#x60;1758130560902.8tRtrH&#x60; 
   * @return eventId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EVENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventId() {
    return eventId;
  }


  @JsonProperty(value = JSON_PROPERTY_EVENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventId(@jakarta.annotation.Nullable String eventId) {
    this.eventId = eventId;
  }


  public Event timestamp(@jakarta.annotation.Nullable Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Timestamp of the event with millisecond precision in Unix time.
   * @return timestamp
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TIMESTAMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTimestamp() {
    return timestamp;
  }


  @JsonProperty(value = JSON_PROPERTY_TIMESTAMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(@jakarta.annotation.Nullable Long timestamp) {
    this.timestamp = timestamp;
  }


  public Event linkedId(@jakarta.annotation.Nullable String linkedId) {
    this.linkedId = linkedId;
    return this;
  }

  /**
   * A customer-provided id that was sent with the request.
   * @return linkedId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LINKED_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkedId() {
    return linkedId;
  }


  @JsonProperty(value = JSON_PROPERTY_LINKED_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedId(@jakarta.annotation.Nullable String linkedId) {
    this.linkedId = linkedId;
  }


  public Event environmentId(@jakarta.annotation.Nullable String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Environment Id of the event. For example: &#x60;ae_47abaca3db2c7c43&#x60; 
   * @return environmentId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ENVIRONMENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEnvironmentId() {
    return environmentId;
  }


  @JsonProperty(value = JSON_PROPERTY_ENVIRONMENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentId(@jakarta.annotation.Nullable String environmentId) {
    this.environmentId = environmentId;
  }


  public Event suspect(@jakarta.annotation.Nullable Boolean suspect) {
    this.suspect = suspect;
    return this;
  }

  /**
   * Field is &#x60;true&#x60; if you have previously set the &#x60;suspect&#x60; flag for this event using the [Server API Update event endpoint](https://dev.fingerprint.com/reference/updateevent).
   * @return suspect
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SUSPECT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuspect() {
    return suspect;
  }


  @JsonProperty(value = JSON_PROPERTY_SUSPECT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspect(@jakarta.annotation.Nullable Boolean suspect) {
    this.suspect = suspect;
  }


  public Event sdk(@jakarta.annotation.Nullable SDK sdk) {
    this.sdk = sdk;
    return this;
  }

  /**
   * Get sdk
   * @return sdk
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SDK, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SDK getSdk() {
    return sdk;
  }


  @JsonProperty(value = JSON_PROPERTY_SDK, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdk(@jakarta.annotation.Nullable SDK sdk) {
    this.sdk = sdk;
  }


  public Event replayed(@jakarta.annotation.Nullable Boolean replayed) {
    this.replayed = replayed;
    return this;
  }

  /**
   * &#x60;true&#x60; if we determined that this payload was replayed, &#x60;false&#x60; otherwise. 
   * @return replayed
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_REPLAYED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReplayed() {
    return replayed;
  }


  @JsonProperty(value = JSON_PROPERTY_REPLAYED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplayed(@jakarta.annotation.Nullable Boolean replayed) {
    this.replayed = replayed;
  }


  public Event identification(@jakarta.annotation.Nullable Identification identification) {
    this.identification = identification;
    return this;
  }

  /**
   * Get identification
   * @return identification
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IDENTIFICATION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Identification getIdentification() {
    return identification;
  }


  @JsonProperty(value = JSON_PROPERTY_IDENTIFICATION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentification(@jakarta.annotation.Nullable Identification identification) {
    this.identification = identification;
  }


  public Event supplementaryIdHighRecall(@jakarta.annotation.Nullable SupplementaryIDHighRecall supplementaryIdHighRecall) {
    this.supplementaryIdHighRecall = supplementaryIdHighRecall;
    return this;
  }

  /**
   * Get supplementaryIdHighRecall
   * @return supplementaryIdHighRecall
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SUPPLEMENTARY_ID_HIGH_RECALL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupplementaryIDHighRecall getSupplementaryIdHighRecall() {
    return supplementaryIdHighRecall;
  }


  @JsonProperty(value = JSON_PROPERTY_SUPPLEMENTARY_ID_HIGH_RECALL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplementaryIdHighRecall(@jakarta.annotation.Nullable SupplementaryIDHighRecall supplementaryIdHighRecall) {
    this.supplementaryIdHighRecall = supplementaryIdHighRecall;
  }


  public Event tags(@jakarta.annotation.Nullable Object tags) {
    this.tags = tags;
    return this;
  }

  /**
   * A customer-provided value or an object that was sent with the identification request or updated later.
   * @return tags
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TAGS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTags() {
    return tags;
  }


  @JsonProperty(value = JSON_PROPERTY_TAGS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(@jakarta.annotation.Nullable Object tags) {
    this.tags = tags;
  }


  public Event url(@jakarta.annotation.Nullable String url) {
    this.url = url;
    return this;
  }

  /**
   * Page URL from which the request was sent. For example &#x60;https://example.com/&#x60; 
   * @return url
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(value = JSON_PROPERTY_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@jakarta.annotation.Nullable String url) {
    this.url = url;
  }


  public Event bundleId(@jakarta.annotation.Nullable String bundleId) {
    this.bundleId = bundleId;
    return this;
  }

  /**
   * Bundle Id of the iOS application integrated with the Fingerprint SDK for the event. For example: &#x60;com.foo.app&#x60; 
   * @return bundleId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_BUNDLE_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBundleId() {
    return bundleId;
  }


  @JsonProperty(value = JSON_PROPERTY_BUNDLE_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBundleId(@jakarta.annotation.Nullable String bundleId) {
    this.bundleId = bundleId;
  }


  public Event packageName(@jakarta.annotation.Nullable String packageName) {
    this.packageName = packageName;
    return this;
  }

  /**
   * Package name of the Android application integrated with the Fingerprint SDK for the event. For example: &#x60;com.foo.app&#x60; 
   * @return packageName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PACKAGE_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackageName() {
    return packageName;
  }


  @JsonProperty(value = JSON_PROPERTY_PACKAGE_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageName(@jakarta.annotation.Nullable String packageName) {
    this.packageName = packageName;
  }


  public Event ipAddress(@jakarta.annotation.Nullable String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * IP address of the requesting browser or bot.
   * @return ipAddress
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IP_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(value = JSON_PROPERTY_IP_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(@jakarta.annotation.Nullable String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public Event userAgent(@jakarta.annotation.Nullable String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  /**
   * User Agent of the client, for example: &#x60;Mozilla/5.0 (Windows NT 6.1; Win64; x64) ....&#x60; 
   * @return userAgent
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_USER_AGENT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserAgent() {
    return userAgent;
  }


  @JsonProperty(value = JSON_PROPERTY_USER_AGENT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserAgent(@jakarta.annotation.Nullable String userAgent) {
    this.userAgent = userAgent;
  }


  public Event browserDetails(@jakarta.annotation.Nullable BrowserDetails browserDetails) {
    this.browserDetails = browserDetails;
    return this;
  }

  /**
   * Get browserDetails
   * @return browserDetails
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_BROWSER_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BrowserDetails getBrowserDetails() {
    return browserDetails;
  }


  @JsonProperty(value = JSON_PROPERTY_BROWSER_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserDetails(@jakarta.annotation.Nullable BrowserDetails browserDetails) {
    this.browserDetails = browserDetails;
  }


  public Event proximity(@jakarta.annotation.Nullable Proximity proximity) {
    this.proximity = proximity;
    return this;
  }

  /**
   * Get proximity
   * @return proximity
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PROXIMITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Proximity getProximity() {
    return proximity;
  }


  @JsonProperty(value = JSON_PROPERTY_PROXIMITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProximity(@jakarta.annotation.Nullable Proximity proximity) {
    this.proximity = proximity;
  }


  public Event bot(@jakarta.annotation.Nullable BotResult bot) {
    this.bot = bot;
    return this;
  }

  /**
   * Get bot
   * @return bot
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_BOT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BotResult getBot() {
    return bot;
  }


  @JsonProperty(value = JSON_PROPERTY_BOT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBot(@jakarta.annotation.Nullable BotResult bot) {
    this.bot = bot;
  }


  public Event botType(@jakarta.annotation.Nullable String botType) {
    this.botType = botType;
    return this;
  }

  /**
   * Additional classification of the bot type if detected. 
   * @return botType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_BOT_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBotType() {
    return botType;
  }


  @JsonProperty(value = JSON_PROPERTY_BOT_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBotType(@jakarta.annotation.Nullable String botType) {
    this.botType = botType;
  }


  public Event clonedApp(@jakarta.annotation.Nullable Boolean clonedApp) {
    this.clonedApp = clonedApp;
    return this;
  }

  /**
   * Android specific cloned application detection. There are 2 values:  * &#x60;true&#x60; - Presence of app cloners work detected (e.g. fully cloned application found or launch of it inside of a not main working profile detected). * &#x60;false&#x60; - No signs of cloned application detected or the client is not Android. 
   * @return clonedApp
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CLONED_APP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getClonedApp() {
    return clonedApp;
  }


  @JsonProperty(value = JSON_PROPERTY_CLONED_APP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClonedApp(@jakarta.annotation.Nullable Boolean clonedApp) {
    this.clonedApp = clonedApp;
  }


  public Event developerTools(@jakarta.annotation.Nullable Boolean developerTools) {
    this.developerTools = developerTools;
    return this;
  }

  /**
   * &#x60;true&#x60; if the browser is Chrome with DevTools open or Firefox with Developer Tools open, &#x60;false&#x60; otherwise. 
   * @return developerTools
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DEVELOPER_TOOLS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeveloperTools() {
    return developerTools;
  }


  @JsonProperty(value = JSON_PROPERTY_DEVELOPER_TOOLS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeveloperTools(@jakarta.annotation.Nullable Boolean developerTools) {
    this.developerTools = developerTools;
  }


  public Event emulator(@jakarta.annotation.Nullable Boolean emulator) {
    this.emulator = emulator;
    return this;
  }

  /**
   * Android specific emulator detection. There are 2 values:  * &#x60;true&#x60; - Emulated environment detected (e.g. launch inside of AVD).  * &#x60;false&#x60; - No signs of emulated environment detected or the client is not Android. 
   * @return emulator
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EMULATOR, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEmulator() {
    return emulator;
  }


  @JsonProperty(value = JSON_PROPERTY_EMULATOR, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmulator(@jakarta.annotation.Nullable Boolean emulator) {
    this.emulator = emulator;
  }


  public Event factoryResetTimestamp(@jakarta.annotation.Nullable Long factoryResetTimestamp) {
    this.factoryResetTimestamp = factoryResetTimestamp;
    return this;
  }

  /**
   * The time of the most recent factory reset that happened on the **mobile device** is expressed as Unix epoch time. When a factory reset cannot be detected on the mobile device or when the request is initiated from a browser,  this field will correspond to the *epoch* time (i.e 1 Jan 1970 UTC) as a value of 0. See [Factory Reset Detection](https://dev.fingerprint.com/docs/smart-signals-overview#factory-reset-detection) to learn more about this Smart Signal. 
   * @return factoryResetTimestamp
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_FACTORY_RESET_TIMESTAMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFactoryResetTimestamp() {
    return factoryResetTimestamp;
  }


  @JsonProperty(value = JSON_PROPERTY_FACTORY_RESET_TIMESTAMP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFactoryResetTimestamp(@jakarta.annotation.Nullable Long factoryResetTimestamp) {
    this.factoryResetTimestamp = factoryResetTimestamp;
  }


  public Event frida(@jakarta.annotation.Nullable Boolean frida) {
    this.frida = frida;
    return this;
  }

  /**
   * [Frida](https://frida.re/docs/) detection for Android and iOS devices. There are 2 values: * &#x60;true&#x60; - Frida detected * &#x60;false&#x60; - No signs of Frida or the client is not a mobile device. 
   * @return frida
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_FRIDA, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFrida() {
    return frida;
  }


  @JsonProperty(value = JSON_PROPERTY_FRIDA, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrida(@jakarta.annotation.Nullable Boolean frida) {
    this.frida = frida;
  }


  public Event ipBlocklist(@jakarta.annotation.Nullable IPBlockList ipBlocklist) {
    this.ipBlocklist = ipBlocklist;
    return this;
  }

  /**
   * Get ipBlocklist
   * @return ipBlocklist
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IP_BLOCKLIST, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPBlockList getIpBlocklist() {
    return ipBlocklist;
  }


  @JsonProperty(value = JSON_PROPERTY_IP_BLOCKLIST, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpBlocklist(@jakarta.annotation.Nullable IPBlockList ipBlocklist) {
    this.ipBlocklist = ipBlocklist;
  }


  public Event ipInfo(@jakarta.annotation.Nullable IPInfo ipInfo) {
    this.ipInfo = ipInfo;
    return this;
  }

  /**
   * Get ipInfo
   * @return ipInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IP_INFO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPInfo getIpInfo() {
    return ipInfo;
  }


  @JsonProperty(value = JSON_PROPERTY_IP_INFO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpInfo(@jakarta.annotation.Nullable IPInfo ipInfo) {
    this.ipInfo = ipInfo;
  }


  public Event proxy(@jakarta.annotation.Nullable Boolean proxy) {
    this.proxy = proxy;
    return this;
  }

  /**
   * IP address was used by a public proxy provider or belonged to a known recent residential proxy 
   * @return proxy
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PROXY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProxy() {
    return proxy;
  }


  @JsonProperty(value = JSON_PROPERTY_PROXY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxy(@jakarta.annotation.Nullable Boolean proxy) {
    this.proxy = proxy;
  }


  public Event proxyConfidence(@jakarta.annotation.Nullable ProxyConfidence proxyConfidence) {
    this.proxyConfidence = proxyConfidence;
    return this;
  }

  /**
   * Get proxyConfidence
   * @return proxyConfidence
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PROXY_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProxyConfidence getProxyConfidence() {
    return proxyConfidence;
  }


  @JsonProperty(value = JSON_PROPERTY_PROXY_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyConfidence(@jakarta.annotation.Nullable ProxyConfidence proxyConfidence) {
    this.proxyConfidence = proxyConfidence;
  }


  public Event proxyDetails(@jakarta.annotation.Nullable ProxyDetails proxyDetails) {
    this.proxyDetails = proxyDetails;
    return this;
  }

  /**
   * Get proxyDetails
   * @return proxyDetails
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PROXY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProxyDetails getProxyDetails() {
    return proxyDetails;
  }


  @JsonProperty(value = JSON_PROPERTY_PROXY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyDetails(@jakarta.annotation.Nullable ProxyDetails proxyDetails) {
    this.proxyDetails = proxyDetails;
  }


  public Event incognito(@jakarta.annotation.Nullable Boolean incognito) {
    this.incognito = incognito;
    return this;
  }

  /**
   * &#x60;true&#x60; if we detected incognito mode used in the browser, &#x60;false&#x60; otherwise. 
   * @return incognito
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_INCOGNITO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncognito() {
    return incognito;
  }


  @JsonProperty(value = JSON_PROPERTY_INCOGNITO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncognito(@jakarta.annotation.Nullable Boolean incognito) {
    this.incognito = incognito;
  }


  public Event jailbroken(@jakarta.annotation.Nullable Boolean jailbroken) {
    this.jailbroken = jailbroken;
    return this;
  }

  /**
   * iOS specific jailbreak detection. There are 2 values:  * &#x60;true&#x60; - Jailbreak detected. * &#x60;false&#x60; - No signs of jailbreak or the client is not iOS. 
   * @return jailbroken
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_JAILBROKEN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getJailbroken() {
    return jailbroken;
  }


  @JsonProperty(value = JSON_PROPERTY_JAILBROKEN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJailbroken(@jakarta.annotation.Nullable Boolean jailbroken) {
    this.jailbroken = jailbroken;
  }


  public Event locationSpoofing(@jakarta.annotation.Nullable Boolean locationSpoofing) {
    this.locationSpoofing = locationSpoofing;
    return this;
  }

  /**
   * Flag indicating whether the request came from a mobile device with location spoofing enabled.
   * @return locationSpoofing
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LOCATION_SPOOFING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLocationSpoofing() {
    return locationSpoofing;
  }


  @JsonProperty(value = JSON_PROPERTY_LOCATION_SPOOFING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationSpoofing(@jakarta.annotation.Nullable Boolean locationSpoofing) {
    this.locationSpoofing = locationSpoofing;
  }


  public Event mitmAttack(@jakarta.annotation.Nullable Boolean mitmAttack) {
    this.mitmAttack = mitmAttack;
    return this;
  }

  /**
   * * &#x60;true&#x60; - When requests made from your users&#39; mobile devices to Fingerprint servers have been intercepted and potentially modified.  * &#x60;false&#x60; - Otherwise or when the request originated from a browser. See [MitM Attack Detection](https://dev.fingerprint.com/docs/smart-signals-reference#mitm-attack-detection) to learn more about this Smart Signal. 
   * @return mitmAttack
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_MITM_ATTACK, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMitmAttack() {
    return mitmAttack;
  }


  @JsonProperty(value = JSON_PROPERTY_MITM_ATTACK, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMitmAttack(@jakarta.annotation.Nullable Boolean mitmAttack) {
    this.mitmAttack = mitmAttack;
  }


  public Event privacySettings(@jakarta.annotation.Nullable Boolean privacySettings) {
    this.privacySettings = privacySettings;
    return this;
  }

  /**
   * &#x60;true&#x60; if the request is from a privacy aware browser (e.g. Tor) or from a browser in which fingerprinting is blocked. Otherwise &#x60;false&#x60;. 
   * @return privacySettings
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PRIVACY_SETTINGS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivacySettings() {
    return privacySettings;
  }


  @JsonProperty(value = JSON_PROPERTY_PRIVACY_SETTINGS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivacySettings(@jakarta.annotation.Nullable Boolean privacySettings) {
    this.privacySettings = privacySettings;
  }


  public Event rootApps(@jakarta.annotation.Nullable Boolean rootApps) {
    this.rootApps = rootApps;
    return this;
  }

  /**
   * Android specific root management apps detection. There are 2 values:  * &#x60;true&#x60; - Root Management Apps detected (e.g. Magisk). * &#x60;false&#x60; - No Root Management Apps detected or the client isn&#39;t Android. 
   * @return rootApps
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ROOT_APPS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRootApps() {
    return rootApps;
  }


  @JsonProperty(value = JSON_PROPERTY_ROOT_APPS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootApps(@jakarta.annotation.Nullable Boolean rootApps) {
    this.rootApps = rootApps;
  }


  public Event suspectScore(@jakarta.annotation.Nullable Integer suspectScore) {
    this.suspectScore = suspectScore;
    return this;
  }

  /**
   * Suspect Score is an easy way to integrate Smart Signals into your fraud protection work flow.  It is a weighted representation of all Smart Signals present in the payload that helps identify suspicious activity. The value range is [0; S] where S is sum of all Smart Signals weights.  See more details here: https://dev.fingerprint.com/docs/suspect-score 
   * @return suspectScore
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SUSPECT_SCORE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSuspectScore() {
    return suspectScore;
  }


  @JsonProperty(value = JSON_PROPERTY_SUSPECT_SCORE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspectScore(@jakarta.annotation.Nullable Integer suspectScore) {
    this.suspectScore = suspectScore;
  }


  public Event tampering(@jakarta.annotation.Nullable Boolean tampering) {
    this.tampering = tampering;
    return this;
  }

  /**
   * Flag indicating browser tampering was detected. This happens when either:   * There are inconsistencies in the browser configuration that cross internal tampering thresholds (see &#x60;tampering_details.anomaly_score&#x60;).   * The browser signature resembles an \&quot;anti-detect\&quot; browser specifically designed to evade fingerprinting (see &#x60;tampering_details.anti_detect_browser&#x60;). 
   * @return tampering
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TAMPERING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTampering() {
    return tampering;
  }


  @JsonProperty(value = JSON_PROPERTY_TAMPERING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTampering(@jakarta.annotation.Nullable Boolean tampering) {
    this.tampering = tampering;
  }


  public Event tamperingDetails(@jakarta.annotation.Nullable TamperingDetails tamperingDetails) {
    this.tamperingDetails = tamperingDetails;
    return this;
  }

  /**
   * Get tamperingDetails
   * @return tamperingDetails
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TAMPERING_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TamperingDetails getTamperingDetails() {
    return tamperingDetails;
  }


  @JsonProperty(value = JSON_PROPERTY_TAMPERING_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTamperingDetails(@jakarta.annotation.Nullable TamperingDetails tamperingDetails) {
    this.tamperingDetails = tamperingDetails;
  }


  public Event velocity(@jakarta.annotation.Nullable Velocity velocity) {
    this.velocity = velocity;
    return this;
  }

  /**
   * Get velocity
   * @return velocity
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VELOCITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Velocity getVelocity() {
    return velocity;
  }


  @JsonProperty(value = JSON_PROPERTY_VELOCITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVelocity(@jakarta.annotation.Nullable Velocity velocity) {
    this.velocity = velocity;
  }


  public Event virtualMachine(@jakarta.annotation.Nullable Boolean virtualMachine) {
    this.virtualMachine = virtualMachine;
    return this;
  }

  /**
   * &#x60;true&#x60; if the request came from a browser running inside a virtual machine (e.g. VMWare), &#x60;false&#x60; otherwise. 
   * @return virtualMachine
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VIRTUAL_MACHINE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVirtualMachine() {
    return virtualMachine;
  }


  @JsonProperty(value = JSON_PROPERTY_VIRTUAL_MACHINE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualMachine(@jakarta.annotation.Nullable Boolean virtualMachine) {
    this.virtualMachine = virtualMachine;
  }


  public Event vpn(@jakarta.annotation.Nullable Boolean vpn) {
    this.vpn = vpn;
    return this;
  }

  /**
   * VPN or other anonymizing service has been used when sending the request. 
   * @return vpn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VPN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVpn() {
    return vpn;
  }


  @JsonProperty(value = JSON_PROPERTY_VPN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpn(@jakarta.annotation.Nullable Boolean vpn) {
    this.vpn = vpn;
  }


  public Event vpnConfidence(@jakarta.annotation.Nullable VpnConfidence vpnConfidence) {
    this.vpnConfidence = vpnConfidence;
    return this;
  }

  /**
   * Get vpnConfidence
   * @return vpnConfidence
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VPN_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VpnConfidence getVpnConfidence() {
    return vpnConfidence;
  }


  @JsonProperty(value = JSON_PROPERTY_VPN_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpnConfidence(@jakarta.annotation.Nullable VpnConfidence vpnConfidence) {
    this.vpnConfidence = vpnConfidence;
  }


  public Event vpnOriginTimezone(@jakarta.annotation.Nullable String vpnOriginTimezone) {
    this.vpnOriginTimezone = vpnOriginTimezone;
    return this;
  }

  /**
   * Local timezone which is used in timezone_mismatch method. 
   * @return vpnOriginTimezone
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VPN_ORIGIN_TIMEZONE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVpnOriginTimezone() {
    return vpnOriginTimezone;
  }


  @JsonProperty(value = JSON_PROPERTY_VPN_ORIGIN_TIMEZONE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpnOriginTimezone(@jakarta.annotation.Nullable String vpnOriginTimezone) {
    this.vpnOriginTimezone = vpnOriginTimezone;
  }


  public Event vpnOriginCountry(@jakarta.annotation.Nullable String vpnOriginCountry) {
    this.vpnOriginCountry = vpnOriginCountry;
    return this;
  }

  /**
   * Country of the request (only for Android SDK version &gt;&#x3D; 2.4.0, ISO 3166 format or unknown). 
   * @return vpnOriginCountry
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VPN_ORIGIN_COUNTRY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVpnOriginCountry() {
    return vpnOriginCountry;
  }


  @JsonProperty(value = JSON_PROPERTY_VPN_ORIGIN_COUNTRY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpnOriginCountry(@jakarta.annotation.Nullable String vpnOriginCountry) {
    this.vpnOriginCountry = vpnOriginCountry;
  }


  public Event vpnMethods(@jakarta.annotation.Nullable VpnMethods vpnMethods) {
    this.vpnMethods = vpnMethods;
    return this;
  }

  /**
   * Get vpnMethods
   * @return vpnMethods
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VPN_METHODS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VpnMethods getVpnMethods() {
    return vpnMethods;
  }


  @JsonProperty(value = JSON_PROPERTY_VPN_METHODS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpnMethods(@jakarta.annotation.Nullable VpnMethods vpnMethods) {
    this.vpnMethods = vpnMethods;
  }


  /**
   * Return true if this Event object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.eventId, event.eventId) &&
        Objects.equals(this.timestamp, event.timestamp) &&
        Objects.equals(this.linkedId, event.linkedId) &&
        Objects.equals(this.environmentId, event.environmentId) &&
        Objects.equals(this.suspect, event.suspect) &&
        Objects.equals(this.sdk, event.sdk) &&
        Objects.equals(this.replayed, event.replayed) &&
        Objects.equals(this.identification, event.identification) &&
        Objects.equals(this.supplementaryIdHighRecall, event.supplementaryIdHighRecall) &&
        Objects.equals(this.tags, event.tags) &&
        Objects.equals(this.url, event.url) &&
        Objects.equals(this.bundleId, event.bundleId) &&
        Objects.equals(this.packageName, event.packageName) &&
        Objects.equals(this.ipAddress, event.ipAddress) &&
        Objects.equals(this.userAgent, event.userAgent) &&
        Objects.equals(this.browserDetails, event.browserDetails) &&
        Objects.equals(this.proximity, event.proximity) &&
        Objects.equals(this.bot, event.bot) &&
        Objects.equals(this.botType, event.botType) &&
        Objects.equals(this.clonedApp, event.clonedApp) &&
        Objects.equals(this.developerTools, event.developerTools) &&
        Objects.equals(this.emulator, event.emulator) &&
        Objects.equals(this.factoryResetTimestamp, event.factoryResetTimestamp) &&
        Objects.equals(this.frida, event.frida) &&
        Objects.equals(this.ipBlocklist, event.ipBlocklist) &&
        Objects.equals(this.ipInfo, event.ipInfo) &&
        Objects.equals(this.proxy, event.proxy) &&
        Objects.equals(this.proxyConfidence, event.proxyConfidence) &&
        Objects.equals(this.proxyDetails, event.proxyDetails) &&
        Objects.equals(this.incognito, event.incognito) &&
        Objects.equals(this.jailbroken, event.jailbroken) &&
        Objects.equals(this.locationSpoofing, event.locationSpoofing) &&
        Objects.equals(this.mitmAttack, event.mitmAttack) &&
        Objects.equals(this.privacySettings, event.privacySettings) &&
        Objects.equals(this.rootApps, event.rootApps) &&
        Objects.equals(this.suspectScore, event.suspectScore) &&
        Objects.equals(this.tampering, event.tampering) &&
        Objects.equals(this.tamperingDetails, event.tamperingDetails) &&
        Objects.equals(this.velocity, event.velocity) &&
        Objects.equals(this.virtualMachine, event.virtualMachine) &&
        Objects.equals(this.vpn, event.vpn) &&
        Objects.equals(this.vpnConfidence, event.vpnConfidence) &&
        Objects.equals(this.vpnOriginTimezone, event.vpnOriginTimezone) &&
        Objects.equals(this.vpnOriginCountry, event.vpnOriginCountry) &&
        Objects.equals(this.vpnMethods, event.vpnMethods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventId, timestamp, linkedId, environmentId, suspect, sdk, replayed, identification, supplementaryIdHighRecall, tags, url, bundleId, packageName, ipAddress, userAgent, browserDetails, proximity, bot, botType, clonedApp, developerTools, emulator, factoryResetTimestamp, frida, ipBlocklist, ipInfo, proxy, proxyConfidence, proxyDetails, incognito, jailbroken, locationSpoofing, mitmAttack, privacySettings, rootApps, suspectScore, tampering, tamperingDetails, velocity, virtualMachine, vpn, vpnConfidence, vpnOriginTimezone, vpnOriginCountry, vpnMethods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    linkedId: ").append(toIndentedString(linkedId)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    suspect: ").append(toIndentedString(suspect)).append("\n");
    sb.append("    sdk: ").append(toIndentedString(sdk)).append("\n");
    sb.append("    replayed: ").append(toIndentedString(replayed)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    supplementaryIdHighRecall: ").append(toIndentedString(supplementaryIdHighRecall)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    browserDetails: ").append(toIndentedString(browserDetails)).append("\n");
    sb.append("    proximity: ").append(toIndentedString(proximity)).append("\n");
    sb.append("    bot: ").append(toIndentedString(bot)).append("\n");
    sb.append("    botType: ").append(toIndentedString(botType)).append("\n");
    sb.append("    clonedApp: ").append(toIndentedString(clonedApp)).append("\n");
    sb.append("    developerTools: ").append(toIndentedString(developerTools)).append("\n");
    sb.append("    emulator: ").append(toIndentedString(emulator)).append("\n");
    sb.append("    factoryResetTimestamp: ").append(toIndentedString(factoryResetTimestamp)).append("\n");
    sb.append("    frida: ").append(toIndentedString(frida)).append("\n");
    sb.append("    ipBlocklist: ").append(toIndentedString(ipBlocklist)).append("\n");
    sb.append("    ipInfo: ").append(toIndentedString(ipInfo)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    proxyConfidence: ").append(toIndentedString(proxyConfidence)).append("\n");
    sb.append("    proxyDetails: ").append(toIndentedString(proxyDetails)).append("\n");
    sb.append("    incognito: ").append(toIndentedString(incognito)).append("\n");
    sb.append("    jailbroken: ").append(toIndentedString(jailbroken)).append("\n");
    sb.append("    locationSpoofing: ").append(toIndentedString(locationSpoofing)).append("\n");
    sb.append("    mitmAttack: ").append(toIndentedString(mitmAttack)).append("\n");
    sb.append("    privacySettings: ").append(toIndentedString(privacySettings)).append("\n");
    sb.append("    rootApps: ").append(toIndentedString(rootApps)).append("\n");
    sb.append("    suspectScore: ").append(toIndentedString(suspectScore)).append("\n");
    sb.append("    tampering: ").append(toIndentedString(tampering)).append("\n");
    sb.append("    tamperingDetails: ").append(toIndentedString(tamperingDetails)).append("\n");
    sb.append("    velocity: ").append(toIndentedString(velocity)).append("\n");
    sb.append("    virtualMachine: ").append(toIndentedString(virtualMachine)).append("\n");
    sb.append("    vpn: ").append(toIndentedString(vpn)).append("\n");
    sb.append("    vpnConfidence: ").append(toIndentedString(vpnConfidence)).append("\n");
    sb.append("    vpnOriginTimezone: ").append(toIndentedString(vpnOriginTimezone)).append("\n");
    sb.append("    vpnOriginCountry: ").append(toIndentedString(vpnOriginCountry)).append("\n");
    sb.append("    vpnMethods: ").append(toIndentedString(vpnMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

