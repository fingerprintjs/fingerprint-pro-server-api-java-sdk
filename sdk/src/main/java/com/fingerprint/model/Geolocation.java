/*
 * Server API
 * # Overview Fingerprint Server API allows you to get, search, and update Events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device. 
 *
 * The version of the OpenAPI document: 4
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingerprint.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fingerprint.model.GeolocationSubdivisionsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fingerprint.sdk.JSON;


/**
 * Geolocation
 */
@JsonPropertyOrder({
  Geolocation.JSON_PROPERTY_ACCURACY_RADIUS,
  Geolocation.JSON_PROPERTY_LATITUDE,
  Geolocation.JSON_PROPERTY_LONGITUDE,
  Geolocation.JSON_PROPERTY_POSTAL_CODE,
  Geolocation.JSON_PROPERTY_TIMEZONE,
  Geolocation.JSON_PROPERTY_CITY_NAME,
  Geolocation.JSON_PROPERTY_COUNTRY_CODE,
  Geolocation.JSON_PROPERTY_COUNTRY_NAME,
  Geolocation.JSON_PROPERTY_CONTINENT_CODE,
  Geolocation.JSON_PROPERTY_CONTINENT_NAME,
  Geolocation.JSON_PROPERTY_SUBDIVISIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class Geolocation {
  public static final String JSON_PROPERTY_ACCURACY_RADIUS = "accuracy_radius";
  @jakarta.annotation.Nullable
  private Integer accuracyRadius;

  public static final String JSON_PROPERTY_LATITUDE = "latitude";
  @jakarta.annotation.Nullable
  private Double latitude;

  public static final String JSON_PROPERTY_LONGITUDE = "longitude";
  @jakarta.annotation.Nullable
  private Double longitude;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postal_code";
  @jakarta.annotation.Nullable
  private String postalCode;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  @jakarta.annotation.Nullable
  private String timezone;

  public static final String JSON_PROPERTY_CITY_NAME = "city_name";
  @jakarta.annotation.Nullable
  private String cityName;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  @jakarta.annotation.Nullable
  private String countryCode;

  public static final String JSON_PROPERTY_COUNTRY_NAME = "country_name";
  @jakarta.annotation.Nullable
  private String countryName;

  public static final String JSON_PROPERTY_CONTINENT_CODE = "continent_code";
  @jakarta.annotation.Nullable
  private String continentCode;

  public static final String JSON_PROPERTY_CONTINENT_NAME = "continent_name";
  @jakarta.annotation.Nullable
  private String continentName;

  public static final String JSON_PROPERTY_SUBDIVISIONS = "subdivisions";
  @jakarta.annotation.Nullable
  private List<GeolocationSubdivisionsInner> subdivisions = new ArrayList<>();

  public Geolocation() { 
  }

  public Geolocation accuracyRadius(@jakarta.annotation.Nullable Integer accuracyRadius) {
    this.accuracyRadius = accuracyRadius;
    return this;
  }

  /**
   * The IP address is likely to be within this radius (in km) of the specified location.
   * minimum: 0
   * @return accuracyRadius
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ACCURACY_RADIUS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccuracyRadius() {
    return accuracyRadius;
  }


  @JsonProperty(value = JSON_PROPERTY_ACCURACY_RADIUS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccuracyRadius(@jakarta.annotation.Nullable Integer accuracyRadius) {
    this.accuracyRadius = accuracyRadius;
  }


  public Geolocation latitude(@jakarta.annotation.Nullable Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * minimum: -90
   * maximum: 90
   * @return latitude
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LATITUDE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLatitude() {
    return latitude;
  }


  @JsonProperty(value = JSON_PROPERTY_LATITUDE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatitude(@jakarta.annotation.Nullable Double latitude) {
    this.latitude = latitude;
  }


  public Geolocation longitude(@jakarta.annotation.Nullable Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * minimum: -180
   * maximum: 180
   * @return longitude
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LONGITUDE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLongitude() {
    return longitude;
  }


  @JsonProperty(value = JSON_PROPERTY_LONGITUDE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLongitude(@jakarta.annotation.Nullable Double longitude) {
    this.longitude = longitude;
  }


  public Geolocation postalCode(@jakarta.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_POSTAL_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(value = JSON_PROPERTY_POSTAL_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(@jakarta.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
  }


  public Geolocation timezone(@jakarta.annotation.Nullable String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TIMEZONE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(value = JSON_PROPERTY_TIMEZONE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezone(@jakarta.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }


  public Geolocation cityName(@jakarta.annotation.Nullable String cityName) {
    this.cityName = cityName;
    return this;
  }

  /**
   * Get cityName
   * @return cityName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CITY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCityName() {
    return cityName;
  }


  @JsonProperty(value = JSON_PROPERTY_CITY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCityName(@jakarta.annotation.Nullable String cityName) {
    this.cityName = cityName;
  }


  public Geolocation countryCode(@jakarta.annotation.Nullable String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Get countryCode
   * @return countryCode
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_COUNTRY_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(value = JSON_PROPERTY_COUNTRY_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryCode(@jakarta.annotation.Nullable String countryCode) {
    this.countryCode = countryCode;
  }


  public Geolocation countryName(@jakarta.annotation.Nullable String countryName) {
    this.countryName = countryName;
    return this;
  }

  /**
   * Get countryName
   * @return countryName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_COUNTRY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryName() {
    return countryName;
  }


  @JsonProperty(value = JSON_PROPERTY_COUNTRY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryName(@jakarta.annotation.Nullable String countryName) {
    this.countryName = countryName;
  }


  public Geolocation continentCode(@jakarta.annotation.Nullable String continentCode) {
    this.continentCode = continentCode;
    return this;
  }

  /**
   * Get continentCode
   * @return continentCode
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CONTINENT_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContinentCode() {
    return continentCode;
  }


  @JsonProperty(value = JSON_PROPERTY_CONTINENT_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinentCode(@jakarta.annotation.Nullable String continentCode) {
    this.continentCode = continentCode;
  }


  public Geolocation continentName(@jakarta.annotation.Nullable String continentName) {
    this.continentName = continentName;
    return this;
  }

  /**
   * Get continentName
   * @return continentName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CONTINENT_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContinentName() {
    return continentName;
  }


  @JsonProperty(value = JSON_PROPERTY_CONTINENT_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinentName(@jakarta.annotation.Nullable String continentName) {
    this.continentName = continentName;
  }


  public Geolocation subdivisions(@jakarta.annotation.Nullable List<GeolocationSubdivisionsInner> subdivisions) {
    this.subdivisions = subdivisions;
    return this;
  }

  public Geolocation addSubdivisionsItem(GeolocationSubdivisionsInner subdivisionsItem) {
    if (this.subdivisions == null) {
      this.subdivisions = new ArrayList<>();
    }
    this.subdivisions.add(subdivisionsItem);
    return this;
  }

  /**
   * Get subdivisions
   * @return subdivisions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SUBDIVISIONS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GeolocationSubdivisionsInner> getSubdivisions() {
    return subdivisions;
  }


  @JsonProperty(value = JSON_PROPERTY_SUBDIVISIONS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubdivisions(@jakarta.annotation.Nullable List<GeolocationSubdivisionsInner> subdivisions) {
    this.subdivisions = subdivisions;
  }


  /**
   * Return true if this Geolocation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Geolocation geolocation = (Geolocation) o;
    return Objects.equals(this.accuracyRadius, geolocation.accuracyRadius) &&
        Objects.equals(this.latitude, geolocation.latitude) &&
        Objects.equals(this.longitude, geolocation.longitude) &&
        Objects.equals(this.postalCode, geolocation.postalCode) &&
        Objects.equals(this.timezone, geolocation.timezone) &&
        Objects.equals(this.cityName, geolocation.cityName) &&
        Objects.equals(this.countryCode, geolocation.countryCode) &&
        Objects.equals(this.countryName, geolocation.countryName) &&
        Objects.equals(this.continentCode, geolocation.continentCode) &&
        Objects.equals(this.continentName, geolocation.continentName) &&
        Objects.equals(this.subdivisions, geolocation.subdivisions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accuracyRadius, latitude, longitude, postalCode, timezone, cityName, countryCode, countryName, continentCode, continentName, subdivisions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Geolocation {\n");
    sb.append("    accuracyRadius: ").append(toIndentedString(accuracyRadius)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    continentCode: ").append(toIndentedString(continentCode)).append("\n");
    sb.append("    continentName: ").append(toIndentedString(continentName)).append("\n");
    sb.append("    subdivisions: ").append(toIndentedString(subdivisions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

