/*
 * Server API
 * # Overview Fingerprint Server API allows you to get, search, and update Events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device. 
 *
 * The version of the OpenAPI document: 4
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingerprint.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fingerprint.sdk.JSON;


/**
 * IPBlockList
 */
@JsonPropertyOrder({
  IPBlockList.JSON_PROPERTY_EMAIL_SPAM,
  IPBlockList.JSON_PROPERTY_ATTACK_SOURCE,
  IPBlockList.JSON_PROPERTY_TOR_NODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class IPBlockList {
  public static final String JSON_PROPERTY_EMAIL_SPAM = "email_spam";
  @jakarta.annotation.Nullable
  private Boolean emailSpam;

  public static final String JSON_PROPERTY_ATTACK_SOURCE = "attack_source";
  @jakarta.annotation.Nullable
  private Boolean attackSource;

  public static final String JSON_PROPERTY_TOR_NODE = "tor_node";
  @jakarta.annotation.Nullable
  private Boolean torNode;

  public IPBlockList() { 
  }

  public IPBlockList emailSpam(@jakarta.annotation.Nullable Boolean emailSpam) {
    this.emailSpam = emailSpam;
    return this;
  }

  /**
   * IP address was part of a known email spam attack (SMTP).
   * @return emailSpam
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EMAIL_SPAM, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEmailSpam() {
    return emailSpam;
  }


  @JsonProperty(value = JSON_PROPERTY_EMAIL_SPAM, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailSpam(@jakarta.annotation.Nullable Boolean emailSpam) {
    this.emailSpam = emailSpam;
  }


  public IPBlockList attackSource(@jakarta.annotation.Nullable Boolean attackSource) {
    this.attackSource = attackSource;
    return this;
  }

  /**
   * IP address was part of a known network attack (SSH/HTTPS).
   * @return attackSource
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ATTACK_SOURCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAttackSource() {
    return attackSource;
  }


  @JsonProperty(value = JSON_PROPERTY_ATTACK_SOURCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttackSource(@jakarta.annotation.Nullable Boolean attackSource) {
    this.attackSource = attackSource;
  }


  public IPBlockList torNode(@jakarta.annotation.Nullable Boolean torNode) {
    this.torNode = torNode;
    return this;
  }

  /**
   * IP address was part of known TOR network activity.
   * @return torNode
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TOR_NODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTorNode() {
    return torNode;
  }


  @JsonProperty(value = JSON_PROPERTY_TOR_NODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTorNode(@jakarta.annotation.Nullable Boolean torNode) {
    this.torNode = torNode;
  }


  /**
   * Return true if this IPBlockList object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPBlockList ipBlockList = (IPBlockList) o;
    return Objects.equals(this.emailSpam, ipBlockList.emailSpam) &&
        Objects.equals(this.attackSource, ipBlockList.attackSource) &&
        Objects.equals(this.torNode, ipBlockList.torNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailSpam, attackSource, torNode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPBlockList {\n");
    sb.append("    emailSpam: ").append(toIndentedString(emailSpam)).append("\n");
    sb.append("    attackSource: ").append(toIndentedString(attackSource)).append("\n");
    sb.append("    torNode: ").append(toIndentedString(torNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

