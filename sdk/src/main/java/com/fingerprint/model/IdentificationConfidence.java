/*
 * Server API
 * # Overview Fingerprint Server API allows you to get, search, and update Events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device. 
 *
 * The version of the OpenAPI document: 4
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingerprint.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fingerprint.sdk.JSON;


/**
 * IdentificationConfidence
 */
@JsonPropertyOrder({
  IdentificationConfidence.JSON_PROPERTY_SCORE,
  IdentificationConfidence.JSON_PROPERTY_VERSION,
  IdentificationConfidence.JSON_PROPERTY_COMMENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class IdentificationConfidence {
  public static final String JSON_PROPERTY_SCORE = "score";
  @jakarta.annotation.Nonnull
  private Double score;

  public static final String JSON_PROPERTY_VERSION = "version";
  @jakarta.annotation.Nullable
  private String version;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  @jakarta.annotation.Nullable
  private String comment;

  public IdentificationConfidence() { 
  }

  public IdentificationConfidence score(@jakarta.annotation.Nonnull Double score) {
    this.score = score;
    return this;
  }

  /**
   * The confidence score is a floating-point number between 0 and 1 that represents the probability of accurate identification.
   * minimum: 0
   * maximum: 1
   * @return score
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_SCORE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getScore() {
    return score;
  }


  @JsonProperty(value = JSON_PROPERTY_SCORE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScore(@jakarta.annotation.Nonnull Double score) {
    this.score = score;
  }


  public IdentificationConfidence version(@jakarta.annotation.Nullable String version) {
    this.version = version;
    return this;
  }

  /**
   * The version name of the method used to calculate the Confidence score. This field is only present for customers who opted in to an alternative calculation method.
   * @return version
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VERSION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(value = JSON_PROPERTY_VERSION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(@jakarta.annotation.Nullable String version) {
    this.version = version;
  }


  public IdentificationConfidence comment(@jakarta.annotation.Nullable String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_COMMENT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(value = JSON_PROPERTY_COMMENT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(@jakarta.annotation.Nullable String comment) {
    this.comment = comment;
  }


  /**
   * Return true if this IdentificationConfidence object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentificationConfidence identificationConfidence = (IdentificationConfidence) o;
    return Objects.equals(this.score, identificationConfidence.score) &&
        Objects.equals(this.version, identificationConfidence.version) &&
        Objects.equals(this.comment, identificationConfidence.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(score, version, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentificationConfidence {\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

