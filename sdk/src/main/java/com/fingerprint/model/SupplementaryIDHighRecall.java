/*
 * Server API
 * # Overview Fingerprint Server API allows you to get, search, and update Events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device. 
 *
 * The version of the OpenAPI document: 4
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingerprint.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fingerprint.model.IdentificationConfidence;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fingerprint.sdk.JSON;


/**
 * A supplementary browser identifier that prioritizes coverage over precision. The High Recall ID algorithm matches more generously, i.e., this identifier will remain the same even when there are subtle differences between two requests. This algorithm does not create as many new visitor IDs as the standard algorithms do, but there could be an increase in false-positive identification.
 */
@JsonPropertyOrder({
  SupplementaryIDHighRecall.JSON_PROPERTY_VISITOR_ID,
  SupplementaryIDHighRecall.JSON_PROPERTY_VISITOR_FOUND,
  SupplementaryIDHighRecall.JSON_PROPERTY_CONFIDENCE,
  SupplementaryIDHighRecall.JSON_PROPERTY_FIRST_SEEN_AT,
  SupplementaryIDHighRecall.JSON_PROPERTY_LAST_SEEN_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class SupplementaryIDHighRecall {
  public static final String JSON_PROPERTY_VISITOR_ID = "visitor_id";
  @jakarta.annotation.Nonnull
  private String visitorId;

  public static final String JSON_PROPERTY_VISITOR_FOUND = "visitor_found";
  @jakarta.annotation.Nonnull
  private Boolean visitorFound;

  public static final String JSON_PROPERTY_CONFIDENCE = "confidence";
  @jakarta.annotation.Nullable
  private IdentificationConfidence confidence;

  public static final String JSON_PROPERTY_FIRST_SEEN_AT = "first_seen_at";
  @jakarta.annotation.Nullable
  private Long firstSeenAt;

  public static final String JSON_PROPERTY_LAST_SEEN_AT = "last_seen_at";
  @jakarta.annotation.Nullable
  private Long lastSeenAt;

  public SupplementaryIDHighRecall() { 
  }

  public SupplementaryIDHighRecall visitorId(@jakarta.annotation.Nonnull String visitorId) {
    this.visitorId = visitorId;
    return this;
  }

  /**
   * String of 20 characters that uniquely identifies the visitor&#39;s browser or mobile device.
   * @return visitorId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_VISITOR_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVisitorId() {
    return visitorId;
  }


  @JsonProperty(value = JSON_PROPERTY_VISITOR_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisitorId(@jakarta.annotation.Nonnull String visitorId) {
    this.visitorId = visitorId;
  }


  public SupplementaryIDHighRecall visitorFound(@jakarta.annotation.Nonnull Boolean visitorFound) {
    this.visitorFound = visitorFound;
    return this;
  }

  /**
   * Attribute represents if a visitor had been identified before.
   * @return visitorFound
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_VISITOR_FOUND, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getVisitorFound() {
    return visitorFound;
  }


  @JsonProperty(value = JSON_PROPERTY_VISITOR_FOUND, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisitorFound(@jakarta.annotation.Nonnull Boolean visitorFound) {
    this.visitorFound = visitorFound;
  }


  public SupplementaryIDHighRecall confidence(@jakarta.annotation.Nullable IdentificationConfidence confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Get confidence
   * @return confidence
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IdentificationConfidence getConfidence() {
    return confidence;
  }


  @JsonProperty(value = JSON_PROPERTY_CONFIDENCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfidence(@jakarta.annotation.Nullable IdentificationConfidence confidence) {
    this.confidence = confidence;
  }


  public SupplementaryIDHighRecall firstSeenAt(@jakarta.annotation.Nullable Long firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
    return this;
  }

  /**
   * Unix epoch time milliseconds timestamp indicating the time at which this ID was first seen. example: &#x60;1758069706642&#x60; - Corresponding to Wed Sep 17 2025 00:41:46 GMT+0000 
   * @return firstSeenAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_FIRST_SEEN_AT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstSeenAt() {
    return firstSeenAt;
  }


  @JsonProperty(value = JSON_PROPERTY_FIRST_SEEN_AT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSeenAt(@jakarta.annotation.Nullable Long firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
  }


  public SupplementaryIDHighRecall lastSeenAt(@jakarta.annotation.Nullable Long lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
    return this;
  }

  /**
   * Unix epoch time milliseconds timestamp indicating the time at which this ID was last seen. example: &#x60;1758069706642&#x60; - Corresponding to Wed Sep 17 2025 00:41:46 GMT+0000 
   * @return lastSeenAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LAST_SEEN_AT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastSeenAt() {
    return lastSeenAt;
  }


  @JsonProperty(value = JSON_PROPERTY_LAST_SEEN_AT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSeenAt(@jakarta.annotation.Nullable Long lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }


  /**
   * Return true if this SupplementaryIDHighRecall object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplementaryIDHighRecall supplementaryIDHighRecall = (SupplementaryIDHighRecall) o;
    return Objects.equals(this.visitorId, supplementaryIDHighRecall.visitorId) &&
        Objects.equals(this.visitorFound, supplementaryIDHighRecall.visitorFound) &&
        Objects.equals(this.confidence, supplementaryIDHighRecall.confidence) &&
        Objects.equals(this.firstSeenAt, supplementaryIDHighRecall.firstSeenAt) &&
        Objects.equals(this.lastSeenAt, supplementaryIDHighRecall.lastSeenAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(visitorId, visitorFound, confidence, firstSeenAt, lastSeenAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplementaryIDHighRecall {\n");
    sb.append("    visitorId: ").append(toIndentedString(visitorId)).append("\n");
    sb.append("    visitorFound: ").append(toIndentedString(visitorFound)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    firstSeenAt: ").append(toIndentedString(firstSeenAt)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

