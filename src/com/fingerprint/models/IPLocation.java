/*
 * Fingerprint Pro Server API
 * Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. This API can be used for data exports, decision-making, and data analysis scenarios.
 *
 * OpenAPI spec version: 3
 * Contact: support@fingerprint.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.fingerprint.models;

import java.util.Objects;
import java.util.Arrays;
import com.fingerprint.models.IPLocationCity;
import com.fingerprint.models.Location;
import com.fingerprint.models.Subdivision;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IPLocation
 */
public class IPLocation {
  @SerializedName("accuracyRadius")
  private Integer accuracyRadius = null;

  @SerializedName("latitude")
  private Double latitude = null;

  @SerializedName("longitude")
  private Double longitude = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("city")
  private IPLocationCity city = null;

  @SerializedName("country")
  private Location country = null;

  @SerializedName("continent")
  private Location continent = null;

  @SerializedName("subdivisions")
  private List<Subdivision> subdivisions = null;

  public IPLocation accuracyRadius(Integer accuracyRadius) {
    this.accuracyRadius = accuracyRadius;
    return this;
  }

   /**
   * Get accuracyRadius
   * minimum: 0
   * @return accuracyRadius
  **/
  @ApiModelProperty(example = "1000", required = true, value = "")
  public Integer getAccuracyRadius() {
    return accuracyRadius;
  }

  public void setAccuracyRadius(Integer accuracyRadius) {
    this.accuracyRadius = accuracyRadius;
  }

  public IPLocation latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * minimum: -90
   * maximum: 90
   * @return latitude
  **/
  @ApiModelProperty(example = "37.75", required = true, value = "")
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public IPLocation longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * minimum: -180
   * maximum: 180
   * @return longitude
  **/
  @ApiModelProperty(example = "-97.82", required = true, value = "")
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public IPLocation postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @ApiModelProperty(example = "130 00", value = "")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public IPLocation timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @ApiModelProperty(example = "America/Chicago", required = true, value = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public IPLocation city(IPLocationCity city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(value = "")
  public IPLocationCity getCity() {
    return city;
  }

  public void setCity(IPLocationCity city) {
    this.city = city;
  }

  public IPLocation country(Location country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(required = true, value = "")
  public Location getCountry() {
    return country;
  }

  public void setCountry(Location country) {
    this.country = country;
  }

  public IPLocation continent(Location continent) {
    this.continent = continent;
    return this;
  }

   /**
   * Get continent
   * @return continent
  **/
  @ApiModelProperty(required = true, value = "")
  public Location getContinent() {
    return continent;
  }

  public void setContinent(Location continent) {
    this.continent = continent;
  }

  public IPLocation subdivisions(List<Subdivision> subdivisions) {
    this.subdivisions = subdivisions;
    return this;
  }

  public IPLocation addSubdivisionsItem(Subdivision subdivisionsItem) {
    if (this.subdivisions == null) {
      this.subdivisions = new ArrayList<Subdivision>();
    }
    this.subdivisions.add(subdivisionsItem);
    return this;
  }

   /**
   * Get subdivisions
   * @return subdivisions
  **/
  @ApiModelProperty(value = "")
  public List<Subdivision> getSubdivisions() {
    return subdivisions;
  }

  public void setSubdivisions(List<Subdivision> subdivisions) {
    this.subdivisions = subdivisions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPLocation ipLocation = (IPLocation) o;
    return Objects.equals(this.accuracyRadius, ipLocation.accuracyRadius) &&
        Objects.equals(this.latitude, ipLocation.latitude) &&
        Objects.equals(this.longitude, ipLocation.longitude) &&
        Objects.equals(this.postalCode, ipLocation.postalCode) &&
        Objects.equals(this.timezone, ipLocation.timezone) &&
        Objects.equals(this.city, ipLocation.city) &&
        Objects.equals(this.country, ipLocation.country) &&
        Objects.equals(this.continent, ipLocation.continent) &&
        Objects.equals(this.subdivisions, ipLocation.subdivisions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accuracyRadius, latitude, longitude, postalCode, timezone, city, country, continent, subdivisions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPLocation {\n");
    
    sb.append("    accuracyRadius: ").append(toIndentedString(accuracyRadius)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    subdivisions: ").append(toIndentedString(subdivisions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
